---
const { blok, id, count = 1 } = Astro.props;
---

<div class="dot__container">
  {
    [...Array(count)].map((x, i) => {
      return <span class={`dot ${blok}dot dot__inactive`} />;
    })
  }
</div>
<style>
  .dot__container {
    display: flex;
    justify-content: end;
    gap: var(--xx-sm);
  }
  .dot {
    position: relative;
    display: inline-block;
    background-color: white;
    width: 16px;
    height: 16px;
    border-radius: 8px;
  }
  .dot__inactive::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    background-color: black;
    width: 12px;
    height: 12px;
    border-radius: 6px;
  }
</style>
<script is:inline define:vars={{ blok, id }}>
  const dots = document.querySelectorAll(`.${blok}dot`);

  window.addEventListener('load', (e) => {
    dots[0].classList.remove('dot__inactive');
    dots[0].classList.add('dot__active');
  });

  dots.forEach((el) => {
    el.addEventListener('click', (e) => handleDotClick(e));
  });

  function handleDotClick(e) {
    let activeDot;
    dots.forEach((el) => {
      if (el.classList.contains('dot__active')) activeDot = el;
    });
    if (e.target.classList.contains('dot__active')) return;
    activeDot.classList.remove('dot__active');
    activeDot.classList.add('dot__inactive');
    e.target.classList.remove('dot__inactive');
    e.target.classList.add('dot__active');
  }

  function handleImageChange(e) {
    const imgs = document.querySelectorAll(`picture__container__${id}`)
    
  }
</script>
